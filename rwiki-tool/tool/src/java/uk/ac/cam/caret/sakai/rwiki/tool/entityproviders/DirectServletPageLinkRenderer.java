package uk.ac.cam.caret.sakai.rwiki.tool.entityproviders;

import uk.ac.cam.caret.sakai.rwiki.service.api.PageLinkRenderer;
import uk.ac.cam.caret.sakai.rwiki.tool.bean.ViewBean;
import uk.ac.cam.caret.sakai.rwiki.utils.NameHelper;
import uk.ac.cam.caret.sakai.rwiki.utils.XmlEscaper;

/**
 * Renders wiki links in the format /direct/wiki/site/SITEID/page/NAME
 *  
 * @author Adrian Fish <adrian.r.fish@gmail.com>
 */
public class DirectServletPageLinkRenderer implements PageLinkRenderer {
	
	private boolean cachable = false;

	private boolean useCache = false;

	public String localRealm;

	public String localSpace;

	public DirectServletPageLinkRenderer(String localRealm) {
		
		this(localRealm, localRealm);
	}

	public DirectServletPageLinkRenderer(String localSpace, String localRealm) {
		
		this.localSpace = localSpace;
		this.localRealm = localRealm;
	}

	public void appendLink(StringBuffer buffer, String name, String view) {
		
		this.appendLink(buffer, name, view, null);
	}

	public void appendLink(StringBuffer buffer, String name, String view, String anchor) {
		
		name = NameHelper.globaliseName(name, localSpace);
		ViewBean vb = new ViewBean(name, localRealm);
		if (anchor != null && !"".equals(anchor)) 
		{
			vb.setAnchor(anchor);
		}
		buffer.append("<a class=\"wiki-page-link\" href=\"")
				.append("/direct/" + RWikiEntityProvider.ENTITY_PREFIX + localRealm + "/page/" + view + ".json")
				.append("\">" + XmlEscaper.xmlEscape(view) + "</a>");
	}

	public void appendCreateLink(StringBuffer buffer, String name, String view) {
	}

	public void setCachable(boolean cachable) {
		
		this.cachable = cachable;
	}

	public boolean isCachable() {
		
		return cachable;
	}

	public boolean canUseCache() {
		
		return useCache;
	}

	public void setUseCache(boolean useCache) {
		
		this.useCache = useCache;
	}

	public void appendLink(StringBuffer buffer, String name, String view, String anchor, boolean autoGenerated) {
		
		this.appendLink(buffer, name, view, anchor);
	}
}
